{"version":3,"sources":["reducers/index.js","reducers/items.js","actions/items.js","store/configureStore.js","components/main.js","components/forecast.js","App.js","index.js"],"names":["combineReducers","isHasData","state","arguments","length","undefined","action","type","temp","newState","filter","item","index","location","name","console","log","currentTemp","concat","Object","toConsumableArray","slice","current","forecast","condition","itemsHasErrored","hasErrored","itemsIsLoading","isLoading","bool","itemsFetchDataCurrent","itemsFetchDataLocation","itemsFetchDataForecast","itemsFetchDataCondition","itemsFetchData","city","dispatch","fetch","then","response","ok","Error","statusText","json","items","forecastday","catch","initialState","Main","inputValue","handleChange","value","_this","setState","handleSubmit","event","preventDefault","props","fetchData","handleChangeCity","_this$props","dataLocation","dataCurrent","dataForecast","dataCondition","currentData","getCurrentDay","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","toLocaleString","weekday","toUpperCase","_this2","this","_this$props2","react_default","a","createElement","className","onSubmit","onChange","target","placeholder","map","onClick","key","temp_c","src","icon","alt","text","last_updated","localtime","gust_kph","pressure_mb","humidity","precip_mm","react_router_dom","to","style","textAlign","color","marginBottom","Component","connect","data","Forecast","Fragment","exact","date","maxtemp_c","marginTop","avghumidity","maxwind_kph","App","basename","process","backgroundImage","react_router","path","component","store","createStore","rootReducer","applyMiddleware","thunk","logger","getState","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"mQAGeA,kBAAgB,CAC3BC,UCgBG,WAA0C,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAARG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOL,UAChB,QACE,OAAOC,IDpBTM,KCiEG,WAAgC,IAAlBN,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAOC,EAAOC,MACZ,IAAK,uBACL,IAAIE,EAAWP,EAAMQ,OAAO,SAACC,EAAKC,GAC9B,GAAGD,EAAKE,SAASC,OAASZ,EAAMU,GAAOC,SAASC,KAIhD,OAAOH,EAHLI,QAAQC,IAAIL,EAAKE,SAASC,KAAMZ,EAAMU,GAAOC,SAASC,KAAO,aAMlEC,QAAQC,IAAIP,EAAU,UACrB,IAAIQ,EAAW,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAOjB,GAAP,CAAcI,EAAOE,OACrC,OAA+B,IAAvBS,EAAYb,OAAea,EAAYI,MAAM,GAAKJ,EAC3D,QACE,OAAOf,ID/EToB,QCuBG,WAAqC,IAApBpB,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACX,IAAK,2BACD,OAAQD,EAAOgB,QAEnB,QACI,OAAOpB,ID5BbqB,SC2CG,WAAsC,IAApBrB,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACX,IAAK,4BACD,OAAQD,EAAOiB,SAEnB,QACI,OAAOrB,IDhDbW,SC+BG,WAAsC,IAApBX,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE3C,OAAQC,EAAOC,MACX,IAAK,4BACD,OAAOD,EAAOO,SAElB,QACI,OAAOX,IDrCbsB,UCmDI,WAAuC,IAApBtB,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOC,MACX,IAAK,6BACD,OAAOD,EAAOkB,UAElB,QACI,OAAOtB,IDxDbuB,gBCVG,WAAgD,IAAvBvB,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAARG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAAK,oBACD,OAAOD,EAAOoB,WAElB,QACI,OAAOxB,IDKbyB,eCDG,WAA+C,IAAvBzB,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAARG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACX,IAAK,mBACD,OAAOD,EAAOsB,UAElB,QACI,OAAO1B,uDCTV,SAASyB,EAAeE,GAC7B,MAAO,CACHtB,KAAM,mBACNqB,UAAWC,GAIV,SAASC,EAAsBR,GACpC,MAAO,CACHf,KAAM,2BACNe,WAIC,SAASS,EAAuBlB,GACrC,MAAO,CACHN,KAAM,4BACNM,YAWC,SAASmB,EAAuBT,GACrC,MAAO,CACHhB,KAAM,4BACNgB,YAIC,SAASU,EAAwBT,GACtC,MAAO,CACHjB,KAAM,6BACNiB,aAWC,SAASU,IAA8B,IAAfC,EAAehC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,SAClC,OAAO,SAACiC,GACJA,EAAST,GAAe,IACxBU,MAAK,gFAAAnB,OAAiFiB,EAAjF,YACAG,KAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAKzB,OAFAN,EAAST,GAAe,IAEjBY,IAEVD,KAAK,SAACC,GAAD,OAAcA,EAASI,SAC5BL,KAAK,SAACM,GACL7B,QAAQC,IAAI4B,GACZR,EA3CH,CACL7B,KAAM,cACNN,WAyC2B,IACnBmC,EAvBD,CACL7B,KAAM,uBACNC,KAqBiCoC,IAC3BR,EAASN,EAAsBc,EAAMtB,UACrCc,EAASH,EAAwBW,EAAMtB,QAAQE,YAC/CY,EAASL,EAAuBa,EAAM/B,WACtCuB,EAASJ,EAAuBY,EAAMrB,SAASsB,gBAEhDC,MAAM,kBAAMV,EA9Ed,CACH7B,KAAM,oBACNmB,YA4E0C,WC1ETqB,UCAjCC,6MACJ9C,MAAQ,CACN+C,WAAY,GACZpC,SAAU,MAGZqC,aAAe,SAAAC,GACbC,EAAKC,SAAS,CACZJ,WAAYE,OAIhBG,aAAe,SAAAC,GACbA,EAAMC,iBACFJ,EAAKlD,MAAM+C,aACfG,EAAKK,MAAMC,UAAUN,EAAKlD,MAAM+C,YAChCG,EAAKC,SAAS,CAAEJ,WAAY,SAG9BU,iBAAmB,SAAC/C,GAAU,IAAAgD,EAC0CR,EAAKK,MAApEjD,EADqBoD,EACrBpD,KAAMqD,EADeD,EACfC,aAAcC,EADCF,EACDE,YAAaC,EADZH,EACYG,aAAcC,EAD1BJ,EAC0BI,cAClDC,EAAczD,EAAKI,GACvBiD,EAAaI,EAAYpD,UACzBiD,EAAYG,EAAY3C,SACxByC,EAAaE,EAAY1C,SAASsB,aAClCmB,EAAcC,EAAY3C,QAAQE,cAIpC0C,cAAgB,WACd,IAAIC,EAAc,IAAIC,KAClBC,EAAOF,EAAYG,cACnBC,EAAQJ,EAAYK,WACpBC,EAAMN,EAAYO,UAGtB,OAFW,IAAIN,KAAKC,EAAME,EAAOE,GACXE,eAAe,KAAM,CAACC,QAAS,UACnCC,cAAgB,IAAKJ,EAAK,KAAOF,EAAM,4EAGlD,IAAAO,EAAAC,KAAAC,EACyED,KAAKtB,MAA7EnC,EADD0D,EACC1D,QAAST,EADVmE,EACUnE,SAAUa,EADpBsD,EACoBtD,WAAYE,EADhCoD,EACgCpD,UAAWJ,EAD3CwD,EAC2CxD,UAAWhB,EADtDwE,EACsDxE,KAAMP,EAD5D+E,EAC4D/E,UAC3DgD,EAAe8B,KAAK7E,MAApB+C,WACR,OAAIvB,EACKuD,EAAAC,EAAAC,cAAA,wDAGLvD,EACKqD,EAAAC,EAAAC,cAAA,0BAGLlF,EAoBFgF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAME,SAAU,SAAA9B,GAAK,OAAIuB,EAAKxB,aAAaC,KACzC0B,EAAAC,EAAAC,cAAA,SACE5E,KAAK,OACL4C,MAAOF,EACPqC,SAAU,SAAA/B,GAAK,OAAIuB,EAAK5B,aAAaK,EAAMgC,OAAOpC,QAClDqC,YAAY,cACZJ,UAAU,iBAIhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,2BACG3E,EAAKiF,IAAI,SAAC9E,EAAKC,GACd,OACAqE,EAAAC,EAAAC,cAAA,QAAMO,QAAS,kBAAMZ,EAAKnB,iBAAiB/C,IACrC+E,IAAKhF,EAAKE,SAASC,KAAOF,GACzBD,EAAKE,SAASC,KAAKmE,EAAAC,EAAAC,cAAA,qBAI9BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXvE,EAASC,MAEbmE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YAAOJ,KAAKb,kBAEhBe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,YAAO7D,EAAQsE,QACfX,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKU,IAAKrE,EAAUsE,KAAMC,IAAKvE,EAAUwE,QAEzCf,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iIACAF,EAAAC,EAAAC,cAAA,yFAGJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK7D,EAAQ2E,cACbhB,EAAAC,EAAAC,cAAA,UAAKtE,EAASqF,eAKtBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6FACAF,EAAAC,EAAAC,cAAA,iIACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,0FAGJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK7D,EAAQ6E,SAAb,wBACAlB,EAAAC,EAAAC,cAAA,UAAK7D,EAAQ8E,YAAb,6CACAnB,EAAAC,EAAAC,cAAA,UAAK7D,EAAQ+E,SAAb,MACApB,EAAAC,EAAAC,cAAA,UAAK7D,EAAQgF,UAAb,qBAKVrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASC,GAAG,oBAAoBpB,UAAU,aACvCH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,yBA7FHH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIsB,MAAO,CAACC,UAAW,SAAUC,MAAO,QAASC,aAAc,SAA/D,yDAIC3B,EAAAC,EAAAC,cAAA,QAAME,SAAU,SAAA9B,GAAK,OAAIuB,EAAKxB,aAAaC,KAC5C0B,EAAAC,EAAAC,cAAA,SACE5E,KAAK,OACL4C,MAAOF,EACPqC,SAAU,SAAA/B,GAAK,OAAIuB,EAAK5B,aAAaK,EAAMgC,OAAOpC,QAClDqC,YAAY,cACZJ,UAAU,wBA/DHyB,aAiLJC,cAtBS,SAAA5G,GACtB,MAAO,CACLoB,QAASpB,EAAMoB,QACfT,SAAUX,EAAMW,SAChBW,UAAWtB,EAAMsB,UACjBE,WAAYxB,EAAMuB,gBAClBG,UAAW1B,EAAMyB,eACjBnB,KAAMN,EAAMM,KACZP,UAAWC,EAAMD,YAIM,SAAAmC,GACzB,MAAO,CACLsB,UAAW,SAAAvB,GAAI,OAAIC,EAASF,EAAeC,KAC3C0B,aAAc,SAAAkD,GAAI,OAAI3E,EAASL,EAAuBgF,KACtDjD,YAAa,SAAAiD,GAAI,OAAI3E,EAASN,EAAsBiF,KACpDhD,aAAc,SAAAgD,GAAI,OAAI3E,EAASJ,EAAuB+E,KACtD/C,cAAe,SAAA+C,GAAI,OAAI3E,EAASH,EAAwB8E,OAI7CD,CAGb9D,GCpLIgE,mLACK,IACCzF,EAAawD,KAAKtB,MAAlBlC,SACR,OACE0D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASW,OAAK,EAACV,GAAG,KAChBvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,SAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACb7D,EAASkE,IAAI,SAAAsB,GAAI,OACnB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBO,IAAKoB,EAAKI,MACvClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZ2B,EAAKI,MAERlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YAAO4B,EAAKtC,IAAI2C,WAChBnC,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKU,IAAKkB,EAAKtC,IAAIjD,UAAUsE,KAAMC,IAAKgB,EAAKtC,IAAIjD,UAAUwE,QAE7Df,EAAAC,EAAAC,cAAA,SAAOsB,MAAO,CAACC,UAAW,SAAUW,UAAW,SAC7CpC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+GACAF,EAAAC,EAAAC,cAAA,+FAGJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK4B,EAAKtC,IAAI6C,YAAd,MACArC,EAAAC,EAAAC,cAAA,UAAK4B,EAAKtC,IAAI8C,YAAd,uCAjCOV,aA8DRC,cAjBS,SAAA5G,GACtB,MAAO,CACLoB,QAASpB,EAAMoB,QACfT,SAAUX,EAAMW,SAChBW,UAAWtB,EAAMsB,UACjBD,SAAUrB,EAAMqB,SAChBG,WAAYxB,EAAMuB,gBAClBG,UAAW1B,EAAMyB,iBAIM,SAAAS,GACzB,MAAO,CACLsB,UAAW,SAAAvB,GAAI,OAAIC,EAASF,EAAeC,OAIhC2E,CAGbE,kBCrCaQ,mLAzBX,OACEvC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAekB,SAAUC,aACvBzC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAAA,WAASC,UAAU,OACjBH,EAAAC,EAAAC,cAAA,UACEC,UAAU,cACVqB,MAAO,CAACkB,gBAAiB,sBAE3B1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAGnBH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOV,OAAK,EAACW,KAAK,IAAIC,UAAW9E,IACjCiC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOV,OAAK,EAACW,KAAK,qBAAqBC,UAAWd,eAlB9CH,aCCZkB,EJDKC,YACHC,EACAlF,EACAmF,YAAgBC,IAAMC,MID9BrH,QAAQC,IAAI+G,EAAMM,YACjBC,IAASC,OACRtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUT,MAAOA,GACf9C,EAAAC,EAAAC,cAACsD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.6f35917d.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { current, location, forecast, condition, itemsHasErrored, itemsIsLoading, temp, isHasData } from './items';\n\nexport default combineReducers({\n    isHasData,\n    temp,\n    current,\n    forecast,\n    location,\n    condition,\n    itemsHasErrored,\n    itemsIsLoading,\n});","export function itemsHasErrored(state = false, action) {\n  switch (action.type) {\n      case 'ITEMS_HAS_ERRORED':\n          return action.hasErrored;\n\n      default:\n          return state;\n  }\n}\n\nexport function itemsIsLoading(state = false, action) {\n  switch (action.type) {\n      case 'ITEMS_IS_LOADING':\n          return action.isLoading;\n\n      default:\n          return state;\n  }\n}\n\nexport function isHasData(state = false, action) {\n  switch (action.type) {\n    case 'IS_HAS_DATA': \n      return action.isHasData\n    default: \n      return state;\n  }\n}\n\nexport function current(state = [], action) {\n  switch (action.type) {\n      case 'ITEMS_FETCH_DATA_CURRENT':\n          return  action.current;\n\n      default:\n          return state;\n  }\n}\n\nexport function location(state = [], action) {\n  \n  switch (action.type) {\n      case 'ITEMS_FETCH_DATA_LOCATION':\n          return action.location;\n\n      default:\n          return state;\n  }\n}\n\nexport function forecast(state = [], action) {\n  switch (action.type) {\n      case 'ITEMS_FETCH_DATA_FORECAST':\n          return  action.forecast;\n\n      default:\n          return state;\n  }\n}\n\nexport  function condition(state = [], action) {\n  switch (action.type) {\n      case 'ITEMS_FETCH_DATA_CONDITION':\n          return action.condition;\n\n      default:\n          return state;\n  }\n}\n\nexport function temp(state=[], action) {\n  switch(action.type) {\n    case 'ITEMS_TEMP_LAST_CITY': \n    let newState = state.filter((item,index) => {\n        if(item.location.name === state[index].location.name){\n          console.log(item.location.name, state[index].location.name , 'iffffff');\n            return ;\n        }\n        return item;\n     });\n\n     console.log(newState, 'result');\n      let currentTemp = [...state, action.temp ];\n     return  currentTemp.length === 6 ? currentTemp.slice(1) : currentTemp;\n    default: \n      return state;\n  }\n}","export function itemsHasErrored(bool) {\n  return {\n      type: 'ITEMS_HAS_ERRORED',\n      hasErrored: bool\n  };\n}\n\nexport function itemsIsLoading(bool) {\n  return {\n      type: 'ITEMS_IS_LOADING',\n      isLoading: bool\n  };\n}\n\nexport function itemsFetchDataCurrent(current) {\n  return {\n      type: 'ITEMS_FETCH_DATA_CURRENT',\n      current\n  };\n}\n\nexport function itemsFetchDataLocation(location) {\n  return {\n      type: 'ITEMS_FETCH_DATA_LOCATION',\n      location\n  };\n}\n\nexport function isHasData(bool) {\n  return {\n    type: 'IS_HAS_DATA',\n    isHasData: bool\n  }\n}\n\nexport function itemsFetchDataForecast(forecast) {\n  return {\n      type: 'ITEMS_FETCH_DATA_FORECAST',\n      forecast\n  };\n}\n\nexport function itemsFetchDataCondition(condition) {\n  return {\n      type: 'ITEMS_FETCH_DATA_CONDITION',\n      condition\n  };\n}\n\nexport function itemsTempLastCity(temp){\n    return {\n      type: 'ITEMS_TEMP_LAST_CITY',\n      temp,\n    }\n}\n\nexport function itemsFetchData(city='london') {\n  return (dispatch) => {\n      dispatch(itemsIsLoading(true));\n      fetch(`https://api.apixu.com/v1/forecast.json?key=ce224de9bc074a68bea221550192103&q=${city}&days=7`)\n          .then((response) => {\n              if (!response.ok) {\n                  throw Error(response.statusText);\n              }\n\n              dispatch(itemsIsLoading(false));\n\n              return response;\n          })\n          .then((response) => response.json())\n          .then((items) => {\n            console.log(items);\n            dispatch(isHasData(true))\n            dispatch(itemsTempLastCity(items))\n            dispatch(itemsFetchDataCurrent(items.current))\n            dispatch(itemsFetchDataCondition(items.current.condition))\n            dispatch(itemsFetchDataLocation(items.location))\n            dispatch(itemsFetchDataForecast(items.forecast.forecastday))\n          })\n          .catch(() => dispatch(itemsHasErrored(true)));\n  };\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk,logger)\n    );\n\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemsFetchData, itemsFetchDataLocation, itemsFetchDataCurrent, itemsFetchDataForecast, itemsFetchDataCondition } from \"../actions/items\";\nimport {NavLink} from 'react-router-dom';\n\nclass Main extends Component {\n  state = {\n    inputValue: \"\",\n    location: [],\n  };\n\n  handleChange = value => {\n    this.setState({\n      inputValue: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if(!this.state.inputValue) return;\n    this.props.fetchData(this.state.inputValue);\n    this.setState({ inputValue: \"\" });\n  };\n\n  handleChangeCity = (index) => {\n    const {temp, dataLocation, dataCurrent, dataForecast, dataCondition} =this.props;\n    let currentData = temp[index];\n    dataLocation(currentData.location);\n    dataCurrent(currentData.current);\n    dataForecast(currentData.forecast.forecastday);\n    dataCondition(currentData.current.condition);\n  }\n\n\n  getCurrentDay = () => {\n    let currentDate = new Date();\n    let year = currentDate.getFullYear();\n    let month = currentDate.getMonth();\n    let day = currentDate.getDate();\n    let date = new Date(year, month, day); \n    let currentDay = date.toLocaleString('ru', {weekday: 'short'});\n    return currentDay.toUpperCase() + ' '+ day +'.' + (month+1);\n  }\n\n  render() {\n    const { current, location, hasErrored, isLoading, condition, temp, isHasData} = this.props;\n    const { inputValue } = this.state;\n    if (hasErrored) {\n      return <p>Sorry! There was an error loading the items</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading…</p>;\n    }\n\n    if(!isHasData){\n      return (\n        <div className=\"main-form\">\n          <h2 style={{textAlign: 'center', color: 'white', marginBottom: '20px'}}>\n          Welcome to the site forecast wether.\n            Enter your city:\n          </h2>\n           <form onSubmit={event => this.handleSubmit(event)}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={event => this.handleChange(event.target.value)}\n            placeholder=\"Enter city:\"\n            className=\"main-input\"\n          />\n        </form>\n        </div>\n      )\n    }\n    return (\n      <div className=\"main\">\n      <div className=\"main-form\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={event => this.handleChange(event.target.value)}\n            placeholder=\"Enter city:\"\n            className=\"main-input\"\n          />\n        </form>\n      </div>\n      <div className=\"last-city\">\n      <span>Last city: </span>\n        {temp.map((item,index) => {\n          return (\n          <span onClick={() => this.handleChangeCity(index)} \n                key={item.location.name + index}>\n                {item.location.name}<span> </span>\n          </span>\n        )})}\n      </div>\n      <div className=\"city\">\n         {location.name}\n      </div>\n      <div className=\"weather-block\">\n        <div className=\"weather-data\">\n          <div className=\"wrap-data\">\n            <div className=\"date-block\">\n              <span>{this.getCurrentDay()}</span>\n            </div>\n          <div className=\"temperature\">\n              <span>{current.temp_c}</span>\n              <span>&#176;</span>\n          </div>\n          </div>\n          <div className=\"condition\">\n          <img src={condition.icon} alt={condition.text} />\n          </div>\n          <table className=\"table-time\">\n            <thead>\n              <tr>\n                <td>Последнее обновление</td> \n                <td>Местное время</td> \n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{current.last_updated}</td> \n                <td>{location.localtime}</td> \n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"table-data\">\n            <table>\n              <thead>\n                <tr>\n                  <td>Скорость ветра</td>\n                  <td>Атмосферное давление</td>\n                  <td>Влажность</td>\n                  <td>Кол-во осадков</td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{current.gust_kph} км/ч</td>\n                  <td>{current.pressure_mb} мм рт. ст.</td>\n                  <td>{current.humidity} %</td>\n                  <td>{current.precip_mm} мм</td>\n                </tr>\n              </tbody>\n            </table>\n        </div>\n        <NavLink to=\"forecast-for-7day\" className=\"city-link\">\n           <button className=\"forecast-button\">\n              forecast for 7 day\n          </button>\n        </NavLink> \n      </div>\n     </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    current: state.current,\n    location: state.location,\n    condition: state.condition,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading,\n    temp: state.temp,\n    isHasData: state.isHasData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: city => dispatch(itemsFetchData(city)),\n    dataLocation: data => dispatch(itemsFetchDataLocation(data)),\n    dataCurrent: data => dispatch(itemsFetchDataCurrent(data)),\n    dataForecast: data => dispatch(itemsFetchDataForecast(data)),\n    dataCondition: data => dispatch(itemsFetchDataCondition(data))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemsFetchData } from \"../actions/items\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Forecast extends Component {\n  render() {\n    const { forecast } = this.props;\n    return (\n      <>\n        <NavLink exact to=\"/\">\n          <button className=\"forecast-button\">back</button>\n        </NavLink>\n        <div className=\"forecast-container\">\n        { forecast.map(data => (\n        <div className=\"forecast-data\" key={data.date}>\n          <div className=\"wrap-data\">\n            <div className=\"date-block\">\n              {data.date}\n            </div>\n            <div className=\"temperature\">\n              <span>{data.day.maxtemp_c}</span>\n              <span>&#176;</span>\n            </div>\n          </div>\n          <div className=\"condition\">\n            <img src={data.day.condition.icon} alt={data.day.condition.text} />\n          </div>\n          <table style={{textAlign: 'center', marginTop: '15px'}}>\n            <thead>\n              <tr>\n                <td>Средняя вложность</td>\n                <td>Скорость ветра</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{data.day.avghumidity} %</td>\n                <td>{data.day.maxwind_kph} км/ч</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n         ))}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    current: state.current,\n    location: state.location,\n    condition: state.condition,\n    forecast: state.forecast,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: city => dispatch(itemsFetchData(city))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Forecast);\n","import React, { Component } from \"react\";\nimport Main from \"./components/main\";\nimport Forecast from \"./components/forecast\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <>\n          <section className=\"fog\">\n            <figure\n              className=\"absolute-bg\"\n              style={{backgroundImage: 'url(\"/1600x900\")'}}\n            />\n            <div className=\"fog__container\">\n              <div className=\"fog__img fog__img--first\" />\n              <div className=\"fog__img fog__img--second\" />\n            </div>\n          </section>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={Main} />\n              <Route exact path=\"/forecast-for-7day\" component={Forecast} />\n            </Switch>\n          </div>\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport './index.css';\nimport App from './App';\n\nconst store = configureStore();\nconsole.log(store.getState());\n ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}